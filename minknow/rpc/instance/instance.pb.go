// Code generated by protoc-gen-go. DO NOT EDIT.
// source: minknow/rpc/instance.proto

package instance

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
	acquisition "minknow_lims_interface/minknow/rpc/acquisition"
	device "minknow_lims_interface/minknow/rpc/device"
	protocol "minknow_lims_interface/minknow/rpc/protocol"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetVersionInfoResponse_DistributionStatus int32

const (
	GetVersionInfoResponse_UNKNOWN GetVersionInfoResponse_DistributionStatus = 0
	GetVersionInfoResponse_STABLE  GetVersionInfoResponse_DistributionStatus = 1
	// it was distributed.
	GetVersionInfoResponse_UNSTABLE GetVersionInfoResponse_DistributionStatus = 2
	// been fully tested, but has not been modified from how it
	// was distributed.
	GetVersionInfoResponse_MODIFIED GetVersionInfoResponse_DistributionStatus = 3
)

var GetVersionInfoResponse_DistributionStatus_name = map[int32]string{
	0: "UNKNOWN",
	1: "STABLE",
	2: "UNSTABLE",
	3: "MODIFIED",
}

var GetVersionInfoResponse_DistributionStatus_value = map[string]int32{
	"UNKNOWN":  0,
	"STABLE":   1,
	"UNSTABLE": 2,
	"MODIFIED": 3,
}

func (x GetVersionInfoResponse_DistributionStatus) String() string {
	return proto.EnumName(GetVersionInfoResponse_DistributionStatus_name, int32(x))
}

func (GetVersionInfoResponse_DistributionStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7570948815db5cf8, []int{1, 0}
}

type GetHostTypeResponse_HostType int32

const (
	GetHostTypeResponse_PC               GetHostTypeResponse_HostType = 0
	GetHostTypeResponse_PROMETHION_ALPHA GetHostTypeResponse_HostType = 1
	GetHostTypeResponse_GRIDION          GetHostTypeResponse_HostType = 2
	GetHostTypeResponse_PROMETHION_BETA  GetHostTypeResponse_HostType = 3
	GetHostTypeResponse_MINIT            GetHostTypeResponse_HostType = 4
	GetHostTypeResponse_MINION_MK1C      GetHostTypeResponse_HostType = 5
)

var GetHostTypeResponse_HostType_name = map[int32]string{
	0: "PC",
	1: "PROMETHION_ALPHA",
	2: "GRIDION",
	3: "PROMETHION_BETA",
	4: "MINIT",
	5: "MINION_MK1C",
}

var GetHostTypeResponse_HostType_value = map[string]int32{
	"PC":               0,
	"PROMETHION_ALPHA": 1,
	"GRIDION":          2,
	"PROMETHION_BETA":  3,
	"MINIT":            4,
	"MINION_MK1C":      5,
}

func (x GetHostTypeResponse_HostType) String() string {
	return proto.EnumName(GetHostTypeResponse_HostType_name, int32(x))
}

func (GetHostTypeResponse_HostType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7570948815db5cf8, []int{15, 0}
}

type GetVersionInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVersionInfoRequest) Reset()         { *m = GetVersionInfoRequest{} }
func (m *GetVersionInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetVersionInfoRequest) ProtoMessage()    {}
func (*GetVersionInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7570948815db5cf8, []int{0}
}

func (m *GetVersionInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVersionInfoRequest.Unmarshal(m, b)
}
func (m *GetVersionInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVersionInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetVersionInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVersionInfoRequest.Merge(m, src)
}
func (m *GetVersionInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetVersionInfoRequest.Size(m)
}
func (m *GetVersionInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVersionInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetVersionInfoRequest proto.InternalMessageInfo

type GetVersionInfoResponse struct {
	// What minknow version is installed. Split into major, minor and patch versions
	// Also includes the full version as a string, which contain the major, minor and patch numbers
	// as well as if the version is pre-release version (-pre), whether it is a release candidate (-rc#)
	// or whether it is a variant version (i.e. for conferences) (-variant). For non-release builds it also
	// includes the hash of the commit it is based on, and whether the working copy is different from that has (-dirty)
	Minknow *GetVersionInfoResponse_MinknowVersion `protobuf:"bytes,1,opt,name=minknow,proto3" json:"minknow,omitempty"`
	// The protocols version specifies what version of bream is installed.
	// By default is set to '0.0.0.0', but will otherwise be set to {minknow-version}.{patch}
	Protocols string `protobuf:"bytes,2,opt,name=protocols,proto3" json:"protocols,omitempty"`
	// Describes the distribution that this MinKNOW installation is part of, ususally
	// this will be the Metapackage version number/identity, this will be "unknown"
	// if the distribution-version hasn't been set. This information is also communicated
	// in the Manager's DaemonMessage in daemon.proto
	DistributionVersion string `protobuf:"bytes,3,opt,name=distribution_version,json=distributionVersion,proto3" json:"distribution_version,omitempty"`
	// Indicates if the MinKNOW distribution including components such as Bream
	// are stable, unstable or have been modified.
	DistributionStatus   GetVersionInfoResponse_DistributionStatus `protobuf:"varint,4,opt,name=distribution_status,json=distributionStatus,proto3,enum=ont.rpc.instance.GetVersionInfoResponse_DistributionStatus" json:"distribution_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *GetVersionInfoResponse) Reset()         { *m = GetVersionInfoResponse{} }
func (m *GetVersionInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetVersionInfoResponse) ProtoMessage()    {}
func (*GetVersionInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7570948815db5cf8, []int{1}
}

func (m *GetVersionInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVersionInfoResponse.Unmarshal(m, b)
}
func (m *GetVersionInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVersionInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetVersionInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVersionInfoResponse.Merge(m, src)
}
func (m *GetVersionInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetVersionInfoResponse.Size(m)
}
func (m *GetVersionInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVersionInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetVersionInfoResponse proto.InternalMessageInfo

func (m *GetVersionInfoResponse) GetMinknow() *GetVersionInfoResponse_MinknowVersion {
	if m != nil {
		return m.Minknow
	}
	return nil
}

func (m *GetVersionInfoResponse) GetProtocols() string {
	if m != nil {
		return m.Protocols
	}
	return ""
}

func (m *GetVersionInfoResponse) GetDistributionVersion() string {
	if m != nil {
		return m.DistributionVersion
	}
	return ""
}

func (m *GetVersionInfoResponse) GetDistributionStatus() GetVersionInfoResponse_DistributionStatus {
	if m != nil {
		return m.DistributionStatus
	}
	return GetVersionInfoResponse_UNKNOWN
}

type GetVersionInfoResponse_MinknowVersion struct {
	Major                int32    `protobuf:"varint,1,opt,name=major,proto3" json:"major,omitempty"`
	Minor                int32    `protobuf:"varint,2,opt,name=minor,proto3" json:"minor,omitempty"`
	Patch                int32    `protobuf:"varint,3,opt,name=patch,proto3" json:"patch,omitempty"`
	Full                 string   `protobuf:"bytes,4,opt,name=full,proto3" json:"full,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVersionInfoResponse_MinknowVersion) Reset()         { *m = GetVersionInfoResponse_MinknowVersion{} }
func (m *GetVersionInfoResponse_MinknowVersion) String() string { return proto.CompactTextString(m) }
func (*GetVersionInfoResponse_MinknowVersion) ProtoMessage()    {}
func (*GetVersionInfoResponse_MinknowVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_7570948815db5cf8, []int{1, 0}
}

func (m *GetVersionInfoResponse_MinknowVersion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVersionInfoResponse_MinknowVersion.Unmarshal(m, b)
}
func (m *GetVersionInfoResponse_MinknowVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVersionInfoResponse_MinknowVersion.Marshal(b, m, deterministic)
}
func (m *GetVersionInfoResponse_MinknowVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVersionInfoResponse_MinknowVersion.Merge(m, src)
}
func (m *GetVersionInfoResponse_MinknowVersion) XXX_Size() int {
	return xxx_messageInfo_GetVersionInfoResponse_MinknowVersion.Size(m)
}
func (m *GetVersionInfoResponse_MinknowVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVersionInfoResponse_MinknowVersion.DiscardUnknown(m)
}

var xxx_messageInfo_GetVersionInfoResponse_MinknowVersion proto.InternalMessageInfo

func (m *GetVersionInfoResponse_MinknowVersion) GetMajor() int32 {
	if m != nil {
		return m.Major
	}
	return 0
}

func (m *GetVersionInfoResponse_MinknowVersion) GetMinor() int32 {
	if m != nil {
		return m.Minor
	}
	return 0
}

func (m *GetVersionInfoResponse_MinknowVersion) GetPatch() int32 {
	if m != nil {
		return m.Patch
	}
	return 0
}

func (m *GetVersionInfoResponse_MinknowVersion) GetFull() string {
	if m != nil {
		return m.Full
	}
	return ""
}

type GetOutputDirectoriesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOutputDirectoriesRequest) Reset()         { *m = GetOutputDirectoriesRequest{} }
func (m *GetOutputDirectoriesRequest) String() string { return proto.CompactTextString(m) }
func (*GetOutputDirectoriesRequest) ProtoMessage()    {}
func (*GetOutputDirectoriesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7570948815db5cf8, []int{2}
}

func (m *GetOutputDirectoriesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOutputDirectoriesRequest.Unmarshal(m, b)
}
func (m *GetOutputDirectoriesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOutputDirectoriesRequest.Marshal(b, m, deterministic)
}
func (m *GetOutputDirectoriesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOutputDirectoriesRequest.Merge(m, src)
}
func (m *GetOutputDirectoriesRequest) XXX_Size() int {
	return xxx_messageInfo_GetOutputDirectoriesRequest.Size(m)
}
func (m *GetOutputDirectoriesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOutputDirectoriesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetOutputDirectoriesRequest proto.InternalMessageInfo

type OutputDirectories struct {
	// The base output directory. Anything that is output to files is branched from this directory.
	Output string `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
	// Directory where logs will be stored.
	Log string `protobuf:"bytes,2,opt,name=log,proto3" json:"log,omitempty"`
	// Base directory where reads will be outputted.
	Reads                string   `protobuf:"bytes,3,opt,name=reads,proto3" json:"reads,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OutputDirectories) Reset()         { *m = OutputDirectories{} }
func (m *OutputDirectories) String() string { return proto.CompactTextString(m) }
func (*OutputDirectories) ProtoMessage()    {}
func (*OutputDirectories) Descriptor() ([]byte, []int) {
	return fileDescriptor_7570948815db5cf8, []int{3}
}

func (m *OutputDirectories) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OutputDirectories.Unmarshal(m, b)
}
func (m *OutputDirectories) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OutputDirectories.Marshal(b, m, deterministic)
}
func (m *OutputDirectories) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OutputDirectories.Merge(m, src)
}
func (m *OutputDirectories) XXX_Size() int {
	return xxx_messageInfo_OutputDirectories.Size(m)
}
func (m *OutputDirectories) XXX_DiscardUnknown() {
	xxx_messageInfo_OutputDirectories.DiscardUnknown(m)
}

var xxx_messageInfo_OutputDirectories proto.InternalMessageInfo

func (m *OutputDirectories) GetOutput() string {
	if m != nil {
		return m.Output
	}
	return ""
}

func (m *OutputDirectories) GetLog() string {
	if m != nil {
		return m.Log
	}
	return ""
}

func (m *OutputDirectories) GetReads() string {
	if m != nil {
		return m.Reads
	}
	return ""
}

type GetDefaultOutputDirectoriesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDefaultOutputDirectoriesRequest) Reset()         { *m = GetDefaultOutputDirectoriesRequest{} }
func (m *GetDefaultOutputDirectoriesRequest) String() string { return proto.CompactTextString(m) }
func (*GetDefaultOutputDirectoriesRequest) ProtoMessage()    {}
func (*GetDefaultOutputDirectoriesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7570948815db5cf8, []int{4}
}

func (m *GetDefaultOutputDirectoriesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDefaultOutputDirectoriesRequest.Unmarshal(m, b)
}
func (m *GetDefaultOutputDirectoriesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDefaultOutputDirectoriesRequest.Marshal(b, m, deterministic)
}
func (m *GetDefaultOutputDirectoriesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDefaultOutputDirectoriesRequest.Merge(m, src)
}
func (m *GetDefaultOutputDirectoriesRequest) XXX_Size() int {
	return xxx_messageInfo_GetDefaultOutputDirectoriesRequest.Size(m)
}
func (m *GetDefaultOutputDirectoriesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDefaultOutputDirectoriesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDefaultOutputDirectoriesRequest proto.InternalMessageInfo

type SetOutputDirectoryRequest struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetOutputDirectoryRequest) Reset()         { *m = SetOutputDirectoryRequest{} }
func (m *SetOutputDirectoryRequest) String() string { return proto.CompactTextString(m) }
func (*SetOutputDirectoryRequest) ProtoMessage()    {}
func (*SetOutputDirectoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7570948815db5cf8, []int{5}
}

func (m *SetOutputDirectoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetOutputDirectoryRequest.Unmarshal(m, b)
}
func (m *SetOutputDirectoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetOutputDirectoryRequest.Marshal(b, m, deterministic)
}
func (m *SetOutputDirectoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetOutputDirectoryRequest.Merge(m, src)
}
func (m *SetOutputDirectoryRequest) XXX_Size() int {
	return xxx_messageInfo_SetOutputDirectoryRequest.Size(m)
}
func (m *SetOutputDirectoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetOutputDirectoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetOutputDirectoryRequest proto.InternalMessageInfo

func (m *SetOutputDirectoryRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type SetOutputDirectoryResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetOutputDirectoryResponse) Reset()         { *m = SetOutputDirectoryResponse{} }
func (m *SetOutputDirectoryResponse) String() string { return proto.CompactTextString(m) }
func (*SetOutputDirectoryResponse) ProtoMessage()    {}
func (*SetOutputDirectoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7570948815db5cf8, []int{6}
}

func (m *SetOutputDirectoryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetOutputDirectoryResponse.Unmarshal(m, b)
}
func (m *SetOutputDirectoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetOutputDirectoryResponse.Marshal(b, m, deterministic)
}
func (m *SetOutputDirectoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetOutputDirectoryResponse.Merge(m, src)
}
func (m *SetOutputDirectoryResponse) XXX_Size() int {
	return xxx_messageInfo_SetOutputDirectoryResponse.Size(m)
}
func (m *SetOutputDirectoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetOutputDirectoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetOutputDirectoryResponse proto.InternalMessageInfo

type SetReadsDirectoryRequest struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetReadsDirectoryRequest) Reset()         { *m = SetReadsDirectoryRequest{} }
func (m *SetReadsDirectoryRequest) String() string { return proto.CompactTextString(m) }
func (*SetReadsDirectoryRequest) ProtoMessage()    {}
func (*SetReadsDirectoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7570948815db5cf8, []int{7}
}

func (m *SetReadsDirectoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetReadsDirectoryRequest.Unmarshal(m, b)
}
func (m *SetReadsDirectoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetReadsDirectoryRequest.Marshal(b, m, deterministic)
}
func (m *SetReadsDirectoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetReadsDirectoryRequest.Merge(m, src)
}
func (m *SetReadsDirectoryRequest) XXX_Size() int {
	return xxx_messageInfo_SetReadsDirectoryRequest.Size(m)
}
func (m *SetReadsDirectoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetReadsDirectoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetReadsDirectoryRequest proto.InternalMessageInfo

func (m *SetReadsDirectoryRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type SetReadsDirectoryResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetReadsDirectoryResponse) Reset()         { *m = SetReadsDirectoryResponse{} }
func (m *SetReadsDirectoryResponse) String() string { return proto.CompactTextString(m) }
func (*SetReadsDirectoryResponse) ProtoMessage()    {}
func (*SetReadsDirectoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7570948815db5cf8, []int{8}
}

func (m *SetReadsDirectoryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetReadsDirectoryResponse.Unmarshal(m, b)
}
func (m *SetReadsDirectoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetReadsDirectoryResponse.Marshal(b, m, deterministic)
}
func (m *SetReadsDirectoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetReadsDirectoryResponse.Merge(m, src)
}
func (m *SetReadsDirectoryResponse) XXX_Size() int {
	return xxx_messageInfo_SetReadsDirectoryResponse.Size(m)
}
func (m *SetReadsDirectoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetReadsDirectoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetReadsDirectoryResponse proto.InternalMessageInfo

// disk-usage information for one file-system
type FilesystemDiskSpaceInfo struct {
	// The name of the file-system
	FilesystemId string `protobuf:"bytes,1,opt,name=filesystem_id,json=filesystemId,proto3" json:"filesystem_id,omitempty"`
	// How much space is left on the file-system
	BytesAvailable uint64 `protobuf:"varint,2,opt,name=bytes_available,json=bytesAvailable,proto3" json:"bytes_available,omitempty"`
	// The total capacity of the file-system when empty.
	BytesCapacity uint64 `protobuf:"varint,3,opt,name=bytes_capacity,json=bytesCapacity,proto3" json:"bytes_capacity,omitempty"`
	// A list of what MinKNOW stores on this file-system, eg: reads, logs,
	// intermediate-files
	What []string `protobuf:"bytes,4,rep,name=what,proto3" json:"what,omitempty"`
	// MinKNOW needs this much space to stop an experiment. If bytes_available
	// goes below this number, data could be lost!
	BytesToStopCleanly uint64 `protobuf:"varint,5,opt,name=bytes_to_stop_cleanly,json=bytesToStopCleanly,proto3" json:"bytes_to_stop_cleanly,omitempty"`
	// The amount of space left on the file-system when recommend_alert
	// was set true.
	BytesWhenAlertIssued uint64 `protobuf:"varint,6,opt,name=bytes_when_alert_issued,json=bytesWhenAlertIssued,proto3" json:"bytes_when_alert_issued,omitempty"`
	// MinKNOW recommends that you alert someone about the disk-usage
	RecommendAlert bool `protobuf:"varint,7,opt,name=recommend_alert,json=recommendAlert,proto3" json:"recommend_alert,omitempty"`
	// MinKNOW recommends that you stop the experiment due to disk-usage
	// concerns
	RecommendStop        bool     `protobuf:"varint,8,opt,name=recommend_stop,json=recommendStop,proto3" json:"recommend_stop,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FilesystemDiskSpaceInfo) Reset()         { *m = FilesystemDiskSpaceInfo{} }
func (m *FilesystemDiskSpaceInfo) String() string { return proto.CompactTextString(m) }
func (*FilesystemDiskSpaceInfo) ProtoMessage()    {}
func (*FilesystemDiskSpaceInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_7570948815db5cf8, []int{9}
}

func (m *FilesystemDiskSpaceInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilesystemDiskSpaceInfo.Unmarshal(m, b)
}
func (m *FilesystemDiskSpaceInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilesystemDiskSpaceInfo.Marshal(b, m, deterministic)
}
func (m *FilesystemDiskSpaceInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilesystemDiskSpaceInfo.Merge(m, src)
}
func (m *FilesystemDiskSpaceInfo) XXX_Size() int {
	return xxx_messageInfo_FilesystemDiskSpaceInfo.Size(m)
}
func (m *FilesystemDiskSpaceInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FilesystemDiskSpaceInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FilesystemDiskSpaceInfo proto.InternalMessageInfo

func (m *FilesystemDiskSpaceInfo) GetFilesystemId() string {
	if m != nil {
		return m.FilesystemId
	}
	return ""
}

func (m *FilesystemDiskSpaceInfo) GetBytesAvailable() uint64 {
	if m != nil {
		return m.BytesAvailable
	}
	return 0
}

func (m *FilesystemDiskSpaceInfo) GetBytesCapacity() uint64 {
	if m != nil {
		return m.BytesCapacity
	}
	return 0
}

func (m *FilesystemDiskSpaceInfo) GetWhat() []string {
	if m != nil {
		return m.What
	}
	return nil
}

func (m *FilesystemDiskSpaceInfo) GetBytesToStopCleanly() uint64 {
	if m != nil {
		return m.BytesToStopCleanly
	}
	return 0
}

func (m *FilesystemDiskSpaceInfo) GetBytesWhenAlertIssued() uint64 {
	if m != nil {
		return m.BytesWhenAlertIssued
	}
	return 0
}

func (m *FilesystemDiskSpaceInfo) GetRecommendAlert() bool {
	if m != nil {
		return m.RecommendAlert
	}
	return false
}

func (m *FilesystemDiskSpaceInfo) GetRecommendStop() bool {
	if m != nil {
		return m.RecommendStop
	}
	return false
}

type GetDiskSpaceInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDiskSpaceInfoRequest) Reset()         { *m = GetDiskSpaceInfoRequest{} }
func (m *GetDiskSpaceInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetDiskSpaceInfoRequest) ProtoMessage()    {}
func (*GetDiskSpaceInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7570948815db5cf8, []int{10}
}

func (m *GetDiskSpaceInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDiskSpaceInfoRequest.Unmarshal(m, b)
}
func (m *GetDiskSpaceInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDiskSpaceInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetDiskSpaceInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDiskSpaceInfoRequest.Merge(m, src)
}
func (m *GetDiskSpaceInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetDiskSpaceInfoRequest.Size(m)
}
func (m *GetDiskSpaceInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDiskSpaceInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDiskSpaceInfoRequest proto.InternalMessageInfo

type GetDiskSpaceInfoResponse struct {
	FilesystemDiskSpaceInfo []*FilesystemDiskSpaceInfo `protobuf:"bytes,1,rep,name=filesystem_disk_space_info,json=filesystemDiskSpaceInfo,proto3" json:"filesystem_disk_space_info,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}                   `json:"-"`
	XXX_unrecognized        []byte                     `json:"-"`
	XXX_sizecache           int32                      `json:"-"`
}

func (m *GetDiskSpaceInfoResponse) Reset()         { *m = GetDiskSpaceInfoResponse{} }
func (m *GetDiskSpaceInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetDiskSpaceInfoResponse) ProtoMessage()    {}
func (*GetDiskSpaceInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7570948815db5cf8, []int{11}
}

func (m *GetDiskSpaceInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDiskSpaceInfoResponse.Unmarshal(m, b)
}
func (m *GetDiskSpaceInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDiskSpaceInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetDiskSpaceInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDiskSpaceInfoResponse.Merge(m, src)
}
func (m *GetDiskSpaceInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetDiskSpaceInfoResponse.Size(m)
}
func (m *GetDiskSpaceInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDiskSpaceInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDiskSpaceInfoResponse proto.InternalMessageInfo

func (m *GetDiskSpaceInfoResponse) GetFilesystemDiskSpaceInfo() []*FilesystemDiskSpaceInfo {
	if m != nil {
		return m.FilesystemDiskSpaceInfo
	}
	return nil
}

type GetMachineIdRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMachineIdRequest) Reset()         { *m = GetMachineIdRequest{} }
func (m *GetMachineIdRequest) String() string { return proto.CompactTextString(m) }
func (*GetMachineIdRequest) ProtoMessage()    {}
func (*GetMachineIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7570948815db5cf8, []int{12}
}

func (m *GetMachineIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMachineIdRequest.Unmarshal(m, b)
}
func (m *GetMachineIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMachineIdRequest.Marshal(b, m, deterministic)
}
func (m *GetMachineIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMachineIdRequest.Merge(m, src)
}
func (m *GetMachineIdRequest) XXX_Size() int {
	return xxx_messageInfo_GetMachineIdRequest.Size(m)
}
func (m *GetMachineIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMachineIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMachineIdRequest proto.InternalMessageInfo

type GetMachineIdResponse struct {
	// The machine_id MinKNOW uses for this host.
	MachineId            string   `protobuf:"bytes,1,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMachineIdResponse) Reset()         { *m = GetMachineIdResponse{} }
func (m *GetMachineIdResponse) String() string { return proto.CompactTextString(m) }
func (*GetMachineIdResponse) ProtoMessage()    {}
func (*GetMachineIdResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7570948815db5cf8, []int{13}
}

func (m *GetMachineIdResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMachineIdResponse.Unmarshal(m, b)
}
func (m *GetMachineIdResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMachineIdResponse.Marshal(b, m, deterministic)
}
func (m *GetMachineIdResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMachineIdResponse.Merge(m, src)
}
func (m *GetMachineIdResponse) XXX_Size() int {
	return xxx_messageInfo_GetMachineIdResponse.Size(m)
}
func (m *GetMachineIdResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMachineIdResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMachineIdResponse proto.InternalMessageInfo

func (m *GetMachineIdResponse) GetMachineId() string {
	if m != nil {
		return m.MachineId
	}
	return ""
}

type GetHostTypeRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetHostTypeRequest) Reset()         { *m = GetHostTypeRequest{} }
func (m *GetHostTypeRequest) String() string { return proto.CompactTextString(m) }
func (*GetHostTypeRequest) ProtoMessage()    {}
func (*GetHostTypeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7570948815db5cf8, []int{14}
}

func (m *GetHostTypeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetHostTypeRequest.Unmarshal(m, b)
}
func (m *GetHostTypeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetHostTypeRequest.Marshal(b, m, deterministic)
}
func (m *GetHostTypeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetHostTypeRequest.Merge(m, src)
}
func (m *GetHostTypeRequest) XXX_Size() int {
	return xxx_messageInfo_GetHostTypeRequest.Size(m)
}
func (m *GetHostTypeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetHostTypeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetHostTypeRequest proto.InternalMessageInfo

type GetHostTypeResponse struct {
	HostType             GetHostTypeResponse_HostType `protobuf:"varint,1,opt,name=host_type,json=hostType,proto3,enum=ont.rpc.instance.GetHostTypeResponse_HostType" json:"host_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *GetHostTypeResponse) Reset()         { *m = GetHostTypeResponse{} }
func (m *GetHostTypeResponse) String() string { return proto.CompactTextString(m) }
func (*GetHostTypeResponse) ProtoMessage()    {}
func (*GetHostTypeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7570948815db5cf8, []int{15}
}

func (m *GetHostTypeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetHostTypeResponse.Unmarshal(m, b)
}
func (m *GetHostTypeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetHostTypeResponse.Marshal(b, m, deterministic)
}
func (m *GetHostTypeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetHostTypeResponse.Merge(m, src)
}
func (m *GetHostTypeResponse) XXX_Size() int {
	return xxx_messageInfo_GetHostTypeResponse.Size(m)
}
func (m *GetHostTypeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetHostTypeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetHostTypeResponse proto.InternalMessageInfo

func (m *GetHostTypeResponse) GetHostType() GetHostTypeResponse_HostType {
	if m != nil {
		return m.HostType
	}
	return GetHostTypeResponse_PC
}

type StreamInstanceActivityRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamInstanceActivityRequest) Reset()         { *m = StreamInstanceActivityRequest{} }
func (m *StreamInstanceActivityRequest) String() string { return proto.CompactTextString(m) }
func (*StreamInstanceActivityRequest) ProtoMessage()    {}
func (*StreamInstanceActivityRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7570948815db5cf8, []int{16}
}

func (m *StreamInstanceActivityRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamInstanceActivityRequest.Unmarshal(m, b)
}
func (m *StreamInstanceActivityRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamInstanceActivityRequest.Marshal(b, m, deterministic)
}
func (m *StreamInstanceActivityRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamInstanceActivityRequest.Merge(m, src)
}
func (m *StreamInstanceActivityRequest) XXX_Size() int {
	return xxx_messageInfo_StreamInstanceActivityRequest.Size(m)
}
func (m *StreamInstanceActivityRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamInstanceActivityRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamInstanceActivityRequest proto.InternalMessageInfo

type DeviceInfo struct {
	// The current state of the device
	DeviceState device.GetDeviceStateResponse_DeviceState `protobuf:"varint,1,opt,name=device_state,json=deviceState,proto3,enum=ont.rpc.device.GetDeviceStateResponse_DeviceState" json:"device_state,omitempty"`
	// Information about the connected device (or no content if disconnected see: device_state)
	DeviceInfo           *device.GetDeviceInfoResponse `protobuf:"bytes,2,opt,name=device_info,json=deviceInfo,proto3" json:"device_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *DeviceInfo) Reset()         { *m = DeviceInfo{} }
func (m *DeviceInfo) String() string { return proto.CompactTextString(m) }
func (*DeviceInfo) ProtoMessage()    {}
func (*DeviceInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_7570948815db5cf8, []int{17}
}

func (m *DeviceInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceInfo.Unmarshal(m, b)
}
func (m *DeviceInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceInfo.Marshal(b, m, deterministic)
}
func (m *DeviceInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceInfo.Merge(m, src)
}
func (m *DeviceInfo) XXX_Size() int {
	return xxx_messageInfo_DeviceInfo.Size(m)
}
func (m *DeviceInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceInfo proto.InternalMessageInfo

func (m *DeviceInfo) GetDeviceState() device.GetDeviceStateResponse_DeviceState {
	if m != nil {
		return m.DeviceState
	}
	return device.GetDeviceStateResponse_DEVICE_DISCONNECTED
}

func (m *DeviceInfo) GetDeviceInfo() *device.GetDeviceInfoResponse {
	if m != nil {
		return m.DeviceInfo
	}
	return nil
}

type StreamInstanceActivityResponse struct {
	// Types that are valid to be assigned to StreamValue:
	//	*StreamInstanceActivityResponse_DeviceInfo
	//	*StreamInstanceActivityResponse_FlowCellInfo
	//	*StreamInstanceActivityResponse_ProtocolRunInfo
	//	*StreamInstanceActivityResponse_AcquisitionRunInfo
	//	*StreamInstanceActivityResponse_FlowCellHealth_
	//	*StreamInstanceActivityResponse_YieldSummary
	StreamValue          isStreamInstanceActivityResponse_StreamValue `protobuf_oneof:"stream_value"`
	XXX_NoUnkeyedLiteral struct{}                                     `json:"-"`
	XXX_unrecognized     []byte                                       `json:"-"`
	XXX_sizecache        int32                                        `json:"-"`
}

func (m *StreamInstanceActivityResponse) Reset()         { *m = StreamInstanceActivityResponse{} }
func (m *StreamInstanceActivityResponse) String() string { return proto.CompactTextString(m) }
func (*StreamInstanceActivityResponse) ProtoMessage()    {}
func (*StreamInstanceActivityResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7570948815db5cf8, []int{18}
}

func (m *StreamInstanceActivityResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamInstanceActivityResponse.Unmarshal(m, b)
}
func (m *StreamInstanceActivityResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamInstanceActivityResponse.Marshal(b, m, deterministic)
}
func (m *StreamInstanceActivityResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamInstanceActivityResponse.Merge(m, src)
}
func (m *StreamInstanceActivityResponse) XXX_Size() int {
	return xxx_messageInfo_StreamInstanceActivityResponse.Size(m)
}
func (m *StreamInstanceActivityResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamInstanceActivityResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamInstanceActivityResponse proto.InternalMessageInfo

type isStreamInstanceActivityResponse_StreamValue interface {
	isStreamInstanceActivityResponse_StreamValue()
}

type StreamInstanceActivityResponse_DeviceInfo struct {
	DeviceInfo *DeviceInfo `protobuf:"bytes,1,opt,name=device_info,json=deviceInfo,proto3,oneof"`
}

type StreamInstanceActivityResponse_FlowCellInfo struct {
	FlowCellInfo *device.GetFlowCellInfoResponse `protobuf:"bytes,2,opt,name=flow_cell_info,json=flowCellInfo,proto3,oneof"`
}

type StreamInstanceActivityResponse_ProtocolRunInfo struct {
	ProtocolRunInfo *protocol.ProtocolRunInfo `protobuf:"bytes,3,opt,name=protocol_run_info,json=protocolRunInfo,proto3,oneof"`
}

type StreamInstanceActivityResponse_AcquisitionRunInfo struct {
	AcquisitionRunInfo *acquisition.AcquisitionRunInfo `protobuf:"bytes,4,opt,name=acquisition_run_info,json=acquisitionRunInfo,proto3,oneof"`
}

type StreamInstanceActivityResponse_FlowCellHealth_ struct {
	FlowCellHealth *StreamInstanceActivityResponse_FlowCellHealth `protobuf:"bytes,5,opt,name=flow_cell_health,json=flowCellHealth,proto3,oneof"`
}

type StreamInstanceActivityResponse_YieldSummary struct {
	YieldSummary *acquisition.AcquisitionYieldSummary `protobuf:"bytes,6,opt,name=yield_summary,json=yieldSummary,proto3,oneof"`
}

func (*StreamInstanceActivityResponse_DeviceInfo) isStreamInstanceActivityResponse_StreamValue() {}

func (*StreamInstanceActivityResponse_FlowCellInfo) isStreamInstanceActivityResponse_StreamValue() {}

func (*StreamInstanceActivityResponse_ProtocolRunInfo) isStreamInstanceActivityResponse_StreamValue() {
}

func (*StreamInstanceActivityResponse_AcquisitionRunInfo) isStreamInstanceActivityResponse_StreamValue() {
}

func (*StreamInstanceActivityResponse_FlowCellHealth_) isStreamInstanceActivityResponse_StreamValue() {
}

func (*StreamInstanceActivityResponse_YieldSummary) isStreamInstanceActivityResponse_StreamValue() {}

func (m *StreamInstanceActivityResponse) GetStreamValue() isStreamInstanceActivityResponse_StreamValue {
	if m != nil {
		return m.StreamValue
	}
	return nil
}

func (m *StreamInstanceActivityResponse) GetDeviceInfo() *DeviceInfo {
	if x, ok := m.GetStreamValue().(*StreamInstanceActivityResponse_DeviceInfo); ok {
		return x.DeviceInfo
	}
	return nil
}

func (m *StreamInstanceActivityResponse) GetFlowCellInfo() *device.GetFlowCellInfoResponse {
	if x, ok := m.GetStreamValue().(*StreamInstanceActivityResponse_FlowCellInfo); ok {
		return x.FlowCellInfo
	}
	return nil
}

func (m *StreamInstanceActivityResponse) GetProtocolRunInfo() *protocol.ProtocolRunInfo {
	if x, ok := m.GetStreamValue().(*StreamInstanceActivityResponse_ProtocolRunInfo); ok {
		return x.ProtocolRunInfo
	}
	return nil
}

func (m *StreamInstanceActivityResponse) GetAcquisitionRunInfo() *acquisition.AcquisitionRunInfo {
	if x, ok := m.GetStreamValue().(*StreamInstanceActivityResponse_AcquisitionRunInfo); ok {
		return x.AcquisitionRunInfo
	}
	return nil
}

func (m *StreamInstanceActivityResponse) GetFlowCellHealth() *StreamInstanceActivityResponse_FlowCellHealth {
	if x, ok := m.GetStreamValue().(*StreamInstanceActivityResponse_FlowCellHealth_); ok {
		return x.FlowCellHealth
	}
	return nil
}

func (m *StreamInstanceActivityResponse) GetYieldSummary() *acquisition.AcquisitionYieldSummary {
	if x, ok := m.GetStreamValue().(*StreamInstanceActivityResponse_YieldSummary); ok {
		return x.YieldSummary
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*StreamInstanceActivityResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*StreamInstanceActivityResponse_DeviceInfo)(nil),
		(*StreamInstanceActivityResponse_FlowCellInfo)(nil),
		(*StreamInstanceActivityResponse_ProtocolRunInfo)(nil),
		(*StreamInstanceActivityResponse_AcquisitionRunInfo)(nil),
		(*StreamInstanceActivityResponse_FlowCellHealth_)(nil),
		(*StreamInstanceActivityResponse_YieldSummary)(nil),
	}
}

type StreamInstanceActivityResponse_FlowCellHealth struct {
	// Map between channel state name and a percentage of how much time that state has been active with respect to all other channel states
	//
	// This is over one minute of time this is calculated over
	ChannelStatePercentages map[string]float32 `protobuf:"bytes,1,rep,name=channel_state_percentages,json=channelStatePercentages,proto3" json:"channel_state_percentages,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral    struct{}           `json:"-"`
	XXX_unrecognized        []byte             `json:"-"`
	XXX_sizecache           int32              `json:"-"`
}

func (m *StreamInstanceActivityResponse_FlowCellHealth) Reset() {
	*m = StreamInstanceActivityResponse_FlowCellHealth{}
}
func (m *StreamInstanceActivityResponse_FlowCellHealth) String() string {
	return proto.CompactTextString(m)
}
func (*StreamInstanceActivityResponse_FlowCellHealth) ProtoMessage() {}
func (*StreamInstanceActivityResponse_FlowCellHealth) Descriptor() ([]byte, []int) {
	return fileDescriptor_7570948815db5cf8, []int{18, 0}
}

func (m *StreamInstanceActivityResponse_FlowCellHealth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamInstanceActivityResponse_FlowCellHealth.Unmarshal(m, b)
}
func (m *StreamInstanceActivityResponse_FlowCellHealth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamInstanceActivityResponse_FlowCellHealth.Marshal(b, m, deterministic)
}
func (m *StreamInstanceActivityResponse_FlowCellHealth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamInstanceActivityResponse_FlowCellHealth.Merge(m, src)
}
func (m *StreamInstanceActivityResponse_FlowCellHealth) XXX_Size() int {
	return xxx_messageInfo_StreamInstanceActivityResponse_FlowCellHealth.Size(m)
}
func (m *StreamInstanceActivityResponse_FlowCellHealth) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamInstanceActivityResponse_FlowCellHealth.DiscardUnknown(m)
}

var xxx_messageInfo_StreamInstanceActivityResponse_FlowCellHealth proto.InternalMessageInfo

func (m *StreamInstanceActivityResponse_FlowCellHealth) GetChannelStatePercentages() map[string]float32 {
	if m != nil {
		return m.ChannelStatePercentages
	}
	return nil
}

func init() {
	proto.RegisterEnum("ont.rpc.instance.GetVersionInfoResponse_DistributionStatus", GetVersionInfoResponse_DistributionStatus_name, GetVersionInfoResponse_DistributionStatus_value)
	proto.RegisterEnum("ont.rpc.instance.GetHostTypeResponse_HostType", GetHostTypeResponse_HostType_name, GetHostTypeResponse_HostType_value)
	proto.RegisterType((*GetVersionInfoRequest)(nil), "ont.rpc.instance.GetVersionInfoRequest")
	proto.RegisterType((*GetVersionInfoResponse)(nil), "ont.rpc.instance.GetVersionInfoResponse")
	proto.RegisterType((*GetVersionInfoResponse_MinknowVersion)(nil), "ont.rpc.instance.GetVersionInfoResponse.MinknowVersion")
	proto.RegisterType((*GetOutputDirectoriesRequest)(nil), "ont.rpc.instance.GetOutputDirectoriesRequest")
	proto.RegisterType((*OutputDirectories)(nil), "ont.rpc.instance.OutputDirectories")
	proto.RegisterType((*GetDefaultOutputDirectoriesRequest)(nil), "ont.rpc.instance.GetDefaultOutputDirectoriesRequest")
	proto.RegisterType((*SetOutputDirectoryRequest)(nil), "ont.rpc.instance.SetOutputDirectoryRequest")
	proto.RegisterType((*SetOutputDirectoryResponse)(nil), "ont.rpc.instance.SetOutputDirectoryResponse")
	proto.RegisterType((*SetReadsDirectoryRequest)(nil), "ont.rpc.instance.SetReadsDirectoryRequest")
	proto.RegisterType((*SetReadsDirectoryResponse)(nil), "ont.rpc.instance.SetReadsDirectoryResponse")
	proto.RegisterType((*FilesystemDiskSpaceInfo)(nil), "ont.rpc.instance.FilesystemDiskSpaceInfo")
	proto.RegisterType((*GetDiskSpaceInfoRequest)(nil), "ont.rpc.instance.GetDiskSpaceInfoRequest")
	proto.RegisterType((*GetDiskSpaceInfoResponse)(nil), "ont.rpc.instance.GetDiskSpaceInfoResponse")
	proto.RegisterType((*GetMachineIdRequest)(nil), "ont.rpc.instance.GetMachineIdRequest")
	proto.RegisterType((*GetMachineIdResponse)(nil), "ont.rpc.instance.GetMachineIdResponse")
	proto.RegisterType((*GetHostTypeRequest)(nil), "ont.rpc.instance.GetHostTypeRequest")
	proto.RegisterType((*GetHostTypeResponse)(nil), "ont.rpc.instance.GetHostTypeResponse")
	proto.RegisterType((*StreamInstanceActivityRequest)(nil), "ont.rpc.instance.StreamInstanceActivityRequest")
	proto.RegisterType((*DeviceInfo)(nil), "ont.rpc.instance.DeviceInfo")
	proto.RegisterType((*StreamInstanceActivityResponse)(nil), "ont.rpc.instance.StreamInstanceActivityResponse")
	proto.RegisterType((*StreamInstanceActivityResponse_FlowCellHealth)(nil), "ont.rpc.instance.StreamInstanceActivityResponse.FlowCellHealth")
	proto.RegisterMapType((map[string]float32)(nil), "ont.rpc.instance.StreamInstanceActivityResponse.FlowCellHealth.ChannelStatePercentagesEntry")
}

func init() { proto.RegisterFile("minknow/rpc/instance.proto", fileDescriptor_7570948815db5cf8) }

var fileDescriptor_7570948815db5cf8 = []byte{
	// 1430 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x57, 0xdf, 0x56, 0xdb, 0x46,
	0x13, 0xb7, 0x6c, 0x20, 0x30, 0x80, 0x51, 0x16, 0x27, 0x28, 0x0a, 0xe4, 0xe3, 0x53, 0xc2, 0x17,
	0xf2, 0xcf, 0x24, 0xfe, 0x9a, 0xd3, 0x9e, 0xf6, 0x22, 0xc7, 0x60, 0xc0, 0x6e, 0x82, 0x4d, 0x65,
	0xd2, 0x9c, 0xfe, 0x39, 0xd5, 0x59, 0xa4, 0x35, 0x56, 0x91, 0x25, 0x45, 0xbb, 0x86, 0xe3, 0x8b,
	0x5e, 0xb4, 0x37, 0x7d, 0x85, 0xbe, 0x43, 0xfb, 0x24, 0x7d, 0x86, 0xf6, 0x39, 0x7a, 0xdb, 0xb3,
	0x2b, 0xc9, 0x92, 0x6d, 0x11, 0xdc, 0xd3, 0xbb, 0xdd, 0xdf, 0xcc, 0xfc, 0x66, 0x66, 0x77, 0x35,
	0x33, 0x02, 0xb5, 0x67, 0xbb, 0xe7, 0xae, 0x77, 0xb9, 0x13, 0xf8, 0xe6, 0x8e, 0xed, 0x52, 0x86,
	0x5d, 0x93, 0x94, 0xfd, 0xc0, 0x63, 0x1e, 0x92, 0x3d, 0x97, 0x95, 0x03, 0xdf, 0x2c, 0xc7, 0xb8,
	0xba, 0x91, 0xd6, 0xc6, 0xe6, 0xfb, 0xbe, 0x4d, 0x6d, 0x66, 0x7b, 0x6e, 0x68, 0xa0, 0x2a, 0x69,
	0xb1, 0x45, 0x2e, 0xec, 0x98, 0x4a, 0x1d, 0x71, 0x23, 0x20, 0xd3, 0x73, 0x42, 0x99, 0xb6, 0x06,
	0xb7, 0x0e, 0x09, 0xfb, 0x92, 0x04, 0xd4, 0xf6, 0xdc, 0x86, 0xdb, 0xf1, 0x74, 0xf2, 0xbe, 0x4f,
	0x28, 0xd3, 0xfe, 0x2c, 0xc0, 0xed, 0x71, 0x09, 0xf5, 0x3d, 0x97, 0x12, 0xf4, 0x05, 0xdc, 0x88,
	0x18, 0x15, 0x69, 0x53, 0xda, 0x5e, 0xac, 0x7c, 0x5c, 0x1e, 0x0f, 0xb6, 0x9c, 0x6d, 0x5a, 0x3e,
	0x0a, 0xed, 0x22, 0x91, 0x1e, 0xf3, 0xa0, 0x75, 0x58, 0x88, 0x03, 0xa3, 0x4a, 0x7e, 0x53, 0xda,
	0x5e, 0xd0, 0x13, 0x00, 0xbd, 0x80, 0x92, 0x65, 0x53, 0x16, 0xd8, 0xa7, 0x7d, 0x9e, 0xb0, 0x71,
	0x11, 0x9a, 0x2b, 0x05, 0xa1, 0xb8, 0x9a, 0x96, 0x45, 0xcc, 0xc8, 0x81, 0x11, 0xd8, 0xa0, 0x0c,
	0xb3, 0x3e, 0x55, 0x66, 0x36, 0xa5, 0xed, 0x62, 0xe5, 0xb3, 0xa9, 0xe3, 0xad, 0xa5, 0x38, 0xda,
	0x82, 0x42, 0x47, 0xd6, 0x04, 0xa6, 0x76, 0xa0, 0x38, 0x9a, 0x19, 0x2a, 0xc1, 0x6c, 0x0f, 0x7f,
	0xef, 0x05, 0xe2, 0x84, 0x66, 0xf5, 0x70, 0x23, 0x50, 0xdb, 0xf5, 0x02, 0x91, 0x22, 0x47, 0xf9,
	0x86, 0xa3, 0x3e, 0x66, 0x66, 0x57, 0xe4, 0x33, 0xab, 0x87, 0x1b, 0x84, 0x60, 0xa6, 0xd3, 0x77,
	0x1c, 0x11, 0xf2, 0x82, 0x2e, 0xd6, 0x5a, 0x03, 0xd0, 0x64, 0x44, 0x68, 0x11, 0x6e, 0xbc, 0x6d,
	0xbe, 0x6e, 0xb6, 0xde, 0x35, 0xe5, 0x1c, 0x02, 0x98, 0x6b, 0x9f, 0x54, 0x77, 0xdf, 0xec, 0xcb,
	0x12, 0x5a, 0x82, 0xf9, 0xb7, 0xcd, 0x68, 0x97, 0xe7, 0xbb, 0xa3, 0x56, 0xad, 0x71, 0xd0, 0xd8,
	0xaf, 0xc9, 0x05, 0x6d, 0x03, 0xee, 0x1e, 0x12, 0xd6, 0xea, 0x33, 0xbf, 0xcf, 0x6a, 0x76, 0x40,
	0x4c, 0xe6, 0x05, 0x36, 0xa1, 0xf1, 0xf5, 0xb7, 0xe1, 0xe6, 0x84, 0x0c, 0xdd, 0x86, 0x39, 0x4f,
	0x80, 0x22, 0xab, 0x05, 0x3d, 0xda, 0x21, 0x19, 0x0a, 0x8e, 0x77, 0x16, 0xdd, 0x1b, 0x5f, 0xf2,
	0x94, 0x02, 0x82, 0x2d, 0x1a, 0x5d, 0x51, 0xb8, 0xd1, 0x1e, 0x80, 0x76, 0x48, 0x58, 0x8d, 0x74,
	0x70, 0xdf, 0xb9, 0xda, 0xf5, 0x0e, 0xdc, 0x69, 0x8f, 0x47, 0x36, 0x88, 0x84, 0xfc, 0x54, 0x7c,
	0xcc, 0xba, 0x51, 0x00, 0x62, 0xad, 0xad, 0x83, 0x9a, 0x65, 0x10, 0x5e, 0xa1, 0x56, 0x06, 0xa5,
	0x4d, 0x98, 0xce, 0x03, 0x98, 0x8a, 0xed, 0xae, 0x70, 0x3f, 0xae, 0x1f, 0x91, 0xfd, 0x91, 0x87,
	0xb5, 0x03, 0xdb, 0x21, 0x74, 0x40, 0x19, 0xe9, 0xd5, 0x6c, 0x7a, 0xde, 0xf6, 0xb1, 0x49, 0xf8,
	0x9b, 0x41, 0xf7, 0x61, 0xb9, 0x33, 0x14, 0x19, 0xb6, 0x15, 0xb1, 0x2e, 0x25, 0x60, 0xc3, 0x42,
	0x0f, 0x61, 0xe5, 0x74, 0xc0, 0x08, 0x35, 0xf0, 0x05, 0xb6, 0x1d, 0x7c, 0xea, 0x10, 0x71, 0x6c,
	0x33, 0x7a, 0x51, 0xc0, 0xd5, 0x18, 0x45, 0x5b, 0x10, 0x22, 0x86, 0x89, 0x7d, 0x6c, 0xda, 0x6c,
	0x20, 0x8e, 0x72, 0x46, 0x5f, 0x16, 0xe8, 0x5e, 0x04, 0xf2, 0x0c, 0x2e, 0xbb, 0x98, 0x29, 0x33,
	0x9b, 0x05, 0x9e, 0x01, 0x5f, 0xa3, 0x17, 0x70, 0x2b, 0x34, 0x65, 0x9e, 0x41, 0x99, 0xe7, 0x1b,
	0xa6, 0x43, 0xb0, 0xeb, 0x0c, 0x94, 0x59, 0xc1, 0x80, 0x84, 0xf0, 0xc4, 0x6b, 0x33, 0xcf, 0xdf,
	0x0b, 0x25, 0xe8, 0x25, 0xac, 0x85, 0x26, 0x97, 0x5d, 0xe2, 0x1a, 0xd8, 0x21, 0x01, 0x33, 0x6c,
	0x4a, 0xfb, 0xc4, 0x52, 0xe6, 0x84, 0x51, 0x49, 0x88, 0xdf, 0x75, 0x89, 0x5b, 0xe5, 0xc2, 0x86,
	0x90, 0xf1, 0x6c, 0x02, 0x62, 0x7a, 0xbd, 0x1e, 0x71, 0xad, 0xd0, 0x4a, 0xb9, 0xb1, 0x29, 0x6d,
	0xcf, 0xeb, 0xc5, 0x21, 0x2c, 0xd4, 0x79, 0x36, 0x89, 0x22, 0x8f, 0x49, 0x99, 0x17, 0x7a, 0xcb,
	0x43, 0x94, 0x47, 0xa3, 0xdd, 0x81, 0x35, 0xfe, 0x40, 0xd2, 0xc7, 0x1a, 0xbf, 0x8a, 0x9f, 0x24,
	0x50, 0x26, 0x65, 0x51, 0x45, 0xea, 0x80, 0x9a, 0x3a, 0x7a, 0xcb, 0xa6, 0xe7, 0x06, 0xe5, 0x4a,
	0x86, 0xed, 0x76, 0x3c, 0x45, 0xda, 0x2c, 0x6c, 0x2f, 0x56, 0x1e, 0x4d, 0x7e, 0xf4, 0x57, 0xdc,
	0xa4, 0xbe, 0xd6, 0xc9, 0x16, 0x68, 0xb7, 0x60, 0xf5, 0x90, 0xb0, 0x23, 0x6c, 0x76, 0x6d, 0x97,
	0x34, 0xac, 0x38, 0xb6, 0x97, 0x50, 0x1a, 0x85, 0xa3, 0xb0, 0x36, 0x00, 0x7a, 0x21, 0x98, 0x3c,
	0x87, 0x85, 0x5e, 0xac, 0xa6, 0x95, 0x00, 0x1d, 0x12, 0x56, 0xf7, 0x28, 0x3b, 0x19, 0xf8, 0x24,
	0x26, 0xfb, 0x5d, 0x12, 0x4e, 0x12, 0x38, 0x22, 0x7b, 0x0d, 0x0b, 0x5d, 0x8f, 0x32, 0x83, 0x0d,
	0x7c, 0x22, 0xb8, 0x8a, 0x95, 0x72, 0x66, 0x1d, 0x1b, 0xb7, 0x2c, 0x0f, 0x81, 0xf9, 0x6e, 0xb4,
	0xd2, 0x3a, 0x30, 0x1f, 0xa3, 0x68, 0x0e, 0xf2, 0xc7, 0x7b, 0x72, 0x0e, 0x95, 0x40, 0x3e, 0xd6,
	0x5b, 0x47, 0xfb, 0x27, 0xf5, 0x46, 0xab, 0x69, 0x54, 0xdf, 0x1c, 0xd7, 0xab, 0xb2, 0xc4, 0x8b,
	0xcb, 0xa1, 0xde, 0xa8, 0x35, 0x5a, 0x4d, 0x39, 0x8f, 0x56, 0x61, 0x25, 0xa5, 0xb2, 0xbb, 0x7f,
	0x52, 0x95, 0x0b, 0x68, 0x01, 0x66, 0x8f, 0x1a, 0xcd, 0xc6, 0x89, 0x3c, 0x83, 0x56, 0x60, 0x91,
	0x2f, 0x5b, 0x4d, 0xe3, 0xe8, 0xf5, 0x8b, 0x3d, 0x79, 0x56, 0xfb, 0x0f, 0x6c, 0xb4, 0x59, 0x40,
	0x70, 0xaf, 0x11, 0x05, 0x58, 0x35, 0x99, 0x7d, 0x61, 0xb3, 0xf8, 0x0b, 0xd4, 0x7e, 0x95, 0x00,
	0x6a, 0xa2, 0x59, 0x89, 0x6f, 0xe8, 0x2d, 0x2c, 0x85, 0xad, 0x4b, 0x14, 0xec, 0x38, 0xcf, 0xca,
	0x30, 0xcf, 0xa8, 0xaf, 0x89, 0x2a, 0xc2, 0x57, 0xbc, 0x02, 0x26, 0x89, 0xa6, 0xb1, 0x45, 0x2b,
	0xd9, 0xa0, 0x03, 0x88, 0xb6, 0xe1, 0x83, 0xc8, 0x8b, 0xae, 0xb5, 0x75, 0x25, 0x6b, 0xfa, 0x6d,
	0xe9, 0x60, 0x0d, 0x31, 0xed, 0xb7, 0x39, 0xb8, 0x77, 0x55, 0x3e, 0xd1, 0x35, 0xbd, 0x1a, 0x75,
	0x15, 0x36, 0xc8, 0xf5, 0xc9, 0x8b, 0x4a, 0x3c, 0xd5, 0x73, 0x69, 0x1f, 0xa8, 0x05, 0xc5, 0x8e,
	0xe3, 0x5d, 0x1a, 0x26, 0x71, 0x9c, 0x74, 0xb8, 0x0f, 0x33, 0xc2, 0x3d, 0x70, 0xbc, 0xcb, 0x3d,
	0xe2, 0x38, 0xe9, 0x80, 0xeb, 0x39, 0x7d, 0xa9, 0x93, 0xc2, 0x51, 0x0b, 0x6e, 0xc6, 0xad, 0xd4,
	0x08, 0xfa, 0x6e, 0xc8, 0x59, 0x10, 0x9c, 0xff, 0x1d, 0x72, 0x0e, 0xc7, 0x82, 0xe3, 0x68, 0xa1,
	0xf7, 0xdd, 0x28, 0xb8, 0x15, 0x7f, 0x14, 0x42, 0xdf, 0x40, 0x29, 0x35, 0x7e, 0x24, 0x9c, 0x33,
	0x63, 0x71, 0xa6, 0x67, 0x94, 0x6a, 0xb2, 0x4e, 0x98, 0x11, 0x9e, 0x40, 0xd1, 0x39, 0xc8, 0x49,
	0xfa, 0x5d, 0x82, 0x1d, 0xd6, 0x15, 0x75, 0x6b, 0xb1, 0xf2, 0x6a, 0xf2, 0x10, 0x3f, 0x7c, 0x17,
	0xe5, 0xf8, 0x78, 0xea, 0x82, 0xa6, 0x9e, 0xd3, 0x8b, 0x9d, 0x11, 0x04, 0xb5, 0x61, 0x79, 0x60,
	0x13, 0xc7, 0x32, 0x68, 0xbf, 0xd7, 0xc3, 0xc1, 0x40, 0x14, 0xbb, 0xc5, 0xca, 0xd3, 0xeb, 0x52,
	0xf8, 0x8a, 0x1b, 0xb5, 0x43, 0x1b, 0x7e, 0xde, 0x83, 0xd4, 0x5e, 0xfd, 0x4b, 0x82, 0xe2, 0xa8,
	0x67, 0xf4, 0x8b, 0x04, 0x77, 0xcc, 0x2e, 0x76, 0x5d, 0xe2, 0x84, 0x0f, 0xdb, 0xf0, 0x49, 0x60,
	0x12, 0x97, 0xe1, 0x33, 0x42, 0xa3, 0xfa, 0xf4, 0xed, 0xbf, 0x4c, 0xaf, 0xbc, 0x17, 0x3a, 0x10,
	0x2f, 0xfe, 0x38, 0xa1, 0xdf, 0x77, 0x59, 0x30, 0xd0, 0xd7, 0xcc, 0x6c, 0xa9, 0xfa, 0x39, 0xac,
	0x7f, 0xc8, 0x90, 0xf7, 0xf6, 0x73, 0x32, 0x88, 0x8a, 0x17, 0x5f, 0xf2, 0xde, 0x7e, 0x81, 0x9d,
	0x7e, 0xd8, 0xb8, 0xf2, 0x7a, 0xb8, 0xf9, 0x34, 0xff, 0x89, 0xb4, 0x5b, 0x84, 0x25, 0x2a, 0x42,
	0x36, 0x04, 0x56, 0xf9, 0x79, 0x1e, 0x56, 0xe2, 0xe8, 0xdb, 0x24, 0xe0, 0xaf, 0x16, 0x9d, 0x81,
	0x7c, 0x46, 0x58, 0x3c, 0xc2, 0x89, 0x87, 0x83, 0x1e, 0x5e, 0x3f, 0x8f, 0x89, 0x6a, 0xa1, 0x6e,
	0x4f, 0x3b, 0xb8, 0x69, 0x39, 0xe4, 0xc2, 0x6d, 0xee, 0x28, 0x1c, 0x51, 0x0c, 0x2b, 0x35, 0xc6,
	0x3c, 0xcb, 0x64, 0xb9, 0x6a, 0x1e, 0x51, 0xef, 0x4f, 0xaa, 0x4f, 0xe8, 0x6a, 0x39, 0xf4, 0x03,
	0xdc, 0xe3, 0xfe, 0xac, 0x70, 0xba, 0xc9, 0xf2, 0xfb, 0x51, 0xa6, 0xdf, 0x6b, 0xc6, 0xa1, 0x69,
	0xdd, 0x53, 0x28, 0xd1, 0xc9, 0x74, 0x07, 0xe8, 0x49, 0xc6, 0xb3, 0xba, 0x6a, 0xba, 0x52, 0x9f,
	0x4e, 0xa7, 0x3c, 0x3c, 0x63, 0x1f, 0x56, 0xb9, 0x53, 0x31, 0xdd, 0xa5, 0x7c, 0x3e, 0xce, 0xa4,
	0xc9, 0x1c, 0xc1, 0xd4, 0x27, 0x53, 0xe9, 0xa6, 0x6e, 0x75, 0x55, 0x9c, 0xf2, 0x68, 0x8b, 0x47,
	0x8f, 0xb2, 0x8f, 0x36, 0x63, 0x90, 0x50, 0x1f, 0x4f, 0xa3, 0x3a, 0xf4, 0x87, 0xa1, 0xc8, 0xfd,
	0x25, 0x6d, 0x1c, 0x6d, 0x65, 0xda, 0x8f, 0xcf, 0x04, 0xea, 0xff, 0xae, 0x53, 0x1b, 0xba, 0xf8,
	0x0e, 0x96, 0xb9, 0x8b, 0x61, 0x73, 0x47, 0x0f, 0xae, 0x69, 0xeb, 0xa1, 0x83, 0xad, 0xa9, 0x9a,
	0xbf, 0x96, 0x43, 0x3f, 0x4a, 0xa0, 0x44, 0x9f, 0x65, 0xac, 0x69, 0xe0, 0xa8, 0x96, 0xa0, 0x9d,
	0xe9, 0xab, 0x4e, 0xe8, 0xf6, 0xf9, 0x3f, 0x2d, 0x53, 0x5a, 0xee, 0xb9, 0xb4, 0xfb, 0xec, 0xeb,
	0x27, 0xd1, 0xaf, 0x9e, 0xe1, 0xd8, 0x3d, 0x6a, 0xd8, 0x2e, 0x23, 0x41, 0x07, 0x9b, 0x64, 0x27,
	0xeb, 0x17, 0xf8, 0x74, 0x4e, 0xb4, 0x9c, 0xff, 0xff, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x45, 0x2a,
	0x54, 0x7f, 0x21, 0x0f, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// InstanceServiceClient is the client API for InstanceService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InstanceServiceClient interface {
	// Current version information includes:
	// - Minknow version
	// - Protocols version
	// - Distribution version
	GetVersionInfo(ctx context.Context, in *GetVersionInfoRequest, opts ...grpc.CallOption) (*GetVersionInfoResponse, error)
	// Returns various directory locations where minknow is outputting data. The paths are absolute paths,
	// local to the machine where minknow is installed
	//
	// the `output` base directory can be changed internally
	// the `logs` directory will not be changed and can be stored
	// the `reads` directory is determined  by the read writer config
	GetOutputDirectories(ctx context.Context, in *GetOutputDirectoriesRequest, opts ...grpc.CallOption) (*OutputDirectories, error)
	// See `get_output_directories`, but this will always return the paths that are defined in the config when the instance
	// of minknow has started
	//
	// Since 1.11
	GetDefaultOutputDirectories(ctx context.Context, in *GetDefaultOutputDirectoriesRequest, opts ...grpc.CallOption) (*OutputDirectories, error)
	// Set the base directory to where all data will be output. Must be an absolute directory
	//
	// Fails with INVALID_ARGUMENT if `value` is not absolute.
	// Fails with FAILED_PRECONDITION if this is called during acquisition
	//
	// Since 1.11
	SetOutputDirectory(ctx context.Context, in *SetOutputDirectoryRequest, opts ...grpc.CallOption) (*SetOutputDirectoryResponse, error)
	// Set the reads directory where read files (hdf5, fastq, protobuf) will be output
	//
	// Fails with INVALID_ARGUMENT if `value` is not absolute.
	// Fails with FAILED_PRECONDITION if this is called during acquisition
	//
	// Since 1.12
	SetReadsDirectory(ctx context.Context, in *SetReadsDirectoryRequest, opts ...grpc.CallOption) (*SetReadsDirectoryResponse, error)
	// Returns information about the amount of disk space available, how much
	// space is needed to stop an experiment cleanly and if MinKNOW thinks
	// that the free disk-space is approaching or past this limit
	//
	// Since 1.11
	GetDiskSpaceInfo(ctx context.Context, in *GetDiskSpaceInfoRequest, opts ...grpc.CallOption) (*GetDiskSpaceInfoResponse, error)
	// Find the machine id MinKNOW uses for this machine.
	//
	// This is expected to be a descriptive string for the machine, MinKNOW currently uses the network hostname.
	//
	// note: This is the identifier used when sending telemetry data for this instance.
	//
	// Since 1.11
	GetMachineId(ctx context.Context, in *GetMachineIdRequest, opts ...grpc.CallOption) (*GetMachineIdResponse, error)
	// Find the host type MinKNOW is running on.
	//
	// This data describes the type of machine which MinKNOW is running on.
	//
	// Since 1.14
	GetHostType(ctx context.Context, in *GetHostTypeRequest, opts ...grpc.CallOption) (*GetHostTypeResponse, error)
	// Find a summary of activity on the instance.
	//
	// The information available from this request is also available from other rpc's - this call is intended
	// as a performance improvement for users who watch a large number of streams (specifically over
	// web socket transport).
	//
	// Use this request to find information about the current device, flow cell, protocol and acquisition state.
	//
	// Since 3.2
	StreamInstanceActivity(ctx context.Context, in *StreamInstanceActivityRequest, opts ...grpc.CallOption) (InstanceService_StreamInstanceActivityClient, error)
}

type instanceServiceClient struct {
	cc *grpc.ClientConn
}

func NewInstanceServiceClient(cc *grpc.ClientConn) InstanceServiceClient {
	return &instanceServiceClient{cc}
}

func (c *instanceServiceClient) GetVersionInfo(ctx context.Context, in *GetVersionInfoRequest, opts ...grpc.CallOption) (*GetVersionInfoResponse, error) {
	out := new(GetVersionInfoResponse)
	err := c.cc.Invoke(ctx, "/ont.rpc.instance.InstanceService/get_version_info", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *instanceServiceClient) GetOutputDirectories(ctx context.Context, in *GetOutputDirectoriesRequest, opts ...grpc.CallOption) (*OutputDirectories, error) {
	out := new(OutputDirectories)
	err := c.cc.Invoke(ctx, "/ont.rpc.instance.InstanceService/get_output_directories", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *instanceServiceClient) GetDefaultOutputDirectories(ctx context.Context, in *GetDefaultOutputDirectoriesRequest, opts ...grpc.CallOption) (*OutputDirectories, error) {
	out := new(OutputDirectories)
	err := c.cc.Invoke(ctx, "/ont.rpc.instance.InstanceService/get_default_output_directories", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *instanceServiceClient) SetOutputDirectory(ctx context.Context, in *SetOutputDirectoryRequest, opts ...grpc.CallOption) (*SetOutputDirectoryResponse, error) {
	out := new(SetOutputDirectoryResponse)
	err := c.cc.Invoke(ctx, "/ont.rpc.instance.InstanceService/set_output_directory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *instanceServiceClient) SetReadsDirectory(ctx context.Context, in *SetReadsDirectoryRequest, opts ...grpc.CallOption) (*SetReadsDirectoryResponse, error) {
	out := new(SetReadsDirectoryResponse)
	err := c.cc.Invoke(ctx, "/ont.rpc.instance.InstanceService/set_reads_directory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *instanceServiceClient) GetDiskSpaceInfo(ctx context.Context, in *GetDiskSpaceInfoRequest, opts ...grpc.CallOption) (*GetDiskSpaceInfoResponse, error) {
	out := new(GetDiskSpaceInfoResponse)
	err := c.cc.Invoke(ctx, "/ont.rpc.instance.InstanceService/get_disk_space_info", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *instanceServiceClient) GetMachineId(ctx context.Context, in *GetMachineIdRequest, opts ...grpc.CallOption) (*GetMachineIdResponse, error) {
	out := new(GetMachineIdResponse)
	err := c.cc.Invoke(ctx, "/ont.rpc.instance.InstanceService/get_machine_id", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *instanceServiceClient) GetHostType(ctx context.Context, in *GetHostTypeRequest, opts ...grpc.CallOption) (*GetHostTypeResponse, error) {
	out := new(GetHostTypeResponse)
	err := c.cc.Invoke(ctx, "/ont.rpc.instance.InstanceService/get_host_type", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *instanceServiceClient) StreamInstanceActivity(ctx context.Context, in *StreamInstanceActivityRequest, opts ...grpc.CallOption) (InstanceService_StreamInstanceActivityClient, error) {
	stream, err := c.cc.NewStream(ctx, &_InstanceService_serviceDesc.Streams[0], "/ont.rpc.instance.InstanceService/stream_instance_activity", opts...)
	if err != nil {
		return nil, err
	}
	x := &instanceServiceStreamInstanceActivityClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type InstanceService_StreamInstanceActivityClient interface {
	Recv() (*StreamInstanceActivityResponse, error)
	grpc.ClientStream
}

type instanceServiceStreamInstanceActivityClient struct {
	grpc.ClientStream
}

func (x *instanceServiceStreamInstanceActivityClient) Recv() (*StreamInstanceActivityResponse, error) {
	m := new(StreamInstanceActivityResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// InstanceServiceServer is the server API for InstanceService service.
type InstanceServiceServer interface {
	// Current version information includes:
	// - Minknow version
	// - Protocols version
	// - Distribution version
	GetVersionInfo(context.Context, *GetVersionInfoRequest) (*GetVersionInfoResponse, error)
	// Returns various directory locations where minknow is outputting data. The paths are absolute paths,
	// local to the machine where minknow is installed
	//
	// the `output` base directory can be changed internally
	// the `logs` directory will not be changed and can be stored
	// the `reads` directory is determined  by the read writer config
	GetOutputDirectories(context.Context, *GetOutputDirectoriesRequest) (*OutputDirectories, error)
	// See `get_output_directories`, but this will always return the paths that are defined in the config when the instance
	// of minknow has started
	//
	// Since 1.11
	GetDefaultOutputDirectories(context.Context, *GetDefaultOutputDirectoriesRequest) (*OutputDirectories, error)
	// Set the base directory to where all data will be output. Must be an absolute directory
	//
	// Fails with INVALID_ARGUMENT if `value` is not absolute.
	// Fails with FAILED_PRECONDITION if this is called during acquisition
	//
	// Since 1.11
	SetOutputDirectory(context.Context, *SetOutputDirectoryRequest) (*SetOutputDirectoryResponse, error)
	// Set the reads directory where read files (hdf5, fastq, protobuf) will be output
	//
	// Fails with INVALID_ARGUMENT if `value` is not absolute.
	// Fails with FAILED_PRECONDITION if this is called during acquisition
	//
	// Since 1.12
	SetReadsDirectory(context.Context, *SetReadsDirectoryRequest) (*SetReadsDirectoryResponse, error)
	// Returns information about the amount of disk space available, how much
	// space is needed to stop an experiment cleanly and if MinKNOW thinks
	// that the free disk-space is approaching or past this limit
	//
	// Since 1.11
	GetDiskSpaceInfo(context.Context, *GetDiskSpaceInfoRequest) (*GetDiskSpaceInfoResponse, error)
	// Find the machine id MinKNOW uses for this machine.
	//
	// This is expected to be a descriptive string for the machine, MinKNOW currently uses the network hostname.
	//
	// note: This is the identifier used when sending telemetry data for this instance.
	//
	// Since 1.11
	GetMachineId(context.Context, *GetMachineIdRequest) (*GetMachineIdResponse, error)
	// Find the host type MinKNOW is running on.
	//
	// This data describes the type of machine which MinKNOW is running on.
	//
	// Since 1.14
	GetHostType(context.Context, *GetHostTypeRequest) (*GetHostTypeResponse, error)
	// Find a summary of activity on the instance.
	//
	// The information available from this request is also available from other rpc's - this call is intended
	// as a performance improvement for users who watch a large number of streams (specifically over
	// web socket transport).
	//
	// Use this request to find information about the current device, flow cell, protocol and acquisition state.
	//
	// Since 3.2
	StreamInstanceActivity(*StreamInstanceActivityRequest, InstanceService_StreamInstanceActivityServer) error
}

// UnimplementedInstanceServiceServer can be embedded to have forward compatible implementations.
type UnimplementedInstanceServiceServer struct {
}

func (*UnimplementedInstanceServiceServer) GetVersionInfo(ctx context.Context, req *GetVersionInfoRequest) (*GetVersionInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVersionInfo not implemented")
}
func (*UnimplementedInstanceServiceServer) GetOutputDirectories(ctx context.Context, req *GetOutputDirectoriesRequest) (*OutputDirectories, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOutputDirectories not implemented")
}
func (*UnimplementedInstanceServiceServer) GetDefaultOutputDirectories(ctx context.Context, req *GetDefaultOutputDirectoriesRequest) (*OutputDirectories, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDefaultOutputDirectories not implemented")
}
func (*UnimplementedInstanceServiceServer) SetOutputDirectory(ctx context.Context, req *SetOutputDirectoryRequest) (*SetOutputDirectoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetOutputDirectory not implemented")
}
func (*UnimplementedInstanceServiceServer) SetReadsDirectory(ctx context.Context, req *SetReadsDirectoryRequest) (*SetReadsDirectoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetReadsDirectory not implemented")
}
func (*UnimplementedInstanceServiceServer) GetDiskSpaceInfo(ctx context.Context, req *GetDiskSpaceInfoRequest) (*GetDiskSpaceInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDiskSpaceInfo not implemented")
}
func (*UnimplementedInstanceServiceServer) GetMachineId(ctx context.Context, req *GetMachineIdRequest) (*GetMachineIdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMachineId not implemented")
}
func (*UnimplementedInstanceServiceServer) GetHostType(ctx context.Context, req *GetHostTypeRequest) (*GetHostTypeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHostType not implemented")
}
func (*UnimplementedInstanceServiceServer) StreamInstanceActivity(req *StreamInstanceActivityRequest, srv InstanceService_StreamInstanceActivityServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamInstanceActivity not implemented")
}

func RegisterInstanceServiceServer(s *grpc.Server, srv InstanceServiceServer) {
	s.RegisterService(&_InstanceService_serviceDesc, srv)
}

func _InstanceService_GetVersionInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVersionInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InstanceServiceServer).GetVersionInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ont.rpc.instance.InstanceService/GetVersionInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InstanceServiceServer).GetVersionInfo(ctx, req.(*GetVersionInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InstanceService_GetOutputDirectories_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOutputDirectoriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InstanceServiceServer).GetOutputDirectories(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ont.rpc.instance.InstanceService/GetOutputDirectories",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InstanceServiceServer).GetOutputDirectories(ctx, req.(*GetOutputDirectoriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InstanceService_GetDefaultOutputDirectories_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDefaultOutputDirectoriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InstanceServiceServer).GetDefaultOutputDirectories(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ont.rpc.instance.InstanceService/GetDefaultOutputDirectories",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InstanceServiceServer).GetDefaultOutputDirectories(ctx, req.(*GetDefaultOutputDirectoriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InstanceService_SetOutputDirectory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetOutputDirectoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InstanceServiceServer).SetOutputDirectory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ont.rpc.instance.InstanceService/SetOutputDirectory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InstanceServiceServer).SetOutputDirectory(ctx, req.(*SetOutputDirectoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InstanceService_SetReadsDirectory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetReadsDirectoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InstanceServiceServer).SetReadsDirectory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ont.rpc.instance.InstanceService/SetReadsDirectory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InstanceServiceServer).SetReadsDirectory(ctx, req.(*SetReadsDirectoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InstanceService_GetDiskSpaceInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDiskSpaceInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InstanceServiceServer).GetDiskSpaceInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ont.rpc.instance.InstanceService/GetDiskSpaceInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InstanceServiceServer).GetDiskSpaceInfo(ctx, req.(*GetDiskSpaceInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InstanceService_GetMachineId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMachineIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InstanceServiceServer).GetMachineId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ont.rpc.instance.InstanceService/GetMachineId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InstanceServiceServer).GetMachineId(ctx, req.(*GetMachineIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InstanceService_GetHostType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetHostTypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InstanceServiceServer).GetHostType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ont.rpc.instance.InstanceService/GetHostType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InstanceServiceServer).GetHostType(ctx, req.(*GetHostTypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InstanceService_StreamInstanceActivity_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(StreamInstanceActivityRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(InstanceServiceServer).StreamInstanceActivity(m, &instanceServiceStreamInstanceActivityServer{stream})
}

type InstanceService_StreamInstanceActivityServer interface {
	Send(*StreamInstanceActivityResponse) error
	grpc.ServerStream
}

type instanceServiceStreamInstanceActivityServer struct {
	grpc.ServerStream
}

func (x *instanceServiceStreamInstanceActivityServer) Send(m *StreamInstanceActivityResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _InstanceService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ont.rpc.instance.InstanceService",
	HandlerType: (*InstanceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "get_version_info",
			Handler:    _InstanceService_GetVersionInfo_Handler,
		},
		{
			MethodName: "get_output_directories",
			Handler:    _InstanceService_GetOutputDirectories_Handler,
		},
		{
			MethodName: "get_default_output_directories",
			Handler:    _InstanceService_GetDefaultOutputDirectories_Handler,
		},
		{
			MethodName: "set_output_directory",
			Handler:    _InstanceService_SetOutputDirectory_Handler,
		},
		{
			MethodName: "set_reads_directory",
			Handler:    _InstanceService_SetReadsDirectory_Handler,
		},
		{
			MethodName: "get_disk_space_info",
			Handler:    _InstanceService_GetDiskSpaceInfo_Handler,
		},
		{
			MethodName: "get_machine_id",
			Handler:    _InstanceService_GetMachineId_Handler,
		},
		{
			MethodName: "get_host_type",
			Handler:    _InstanceService_GetHostType_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "stream_instance_activity",
			Handler:       _InstanceService_StreamInstanceActivity_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "minknow/rpc/instance.proto",
}
